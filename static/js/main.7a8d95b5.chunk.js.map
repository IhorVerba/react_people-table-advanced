{"version":3,"sources":["components/Navbar.tsx","App.tsx","api.ts","stores/PeopleContext.tsx","pages/HomePage.tsx","pages/NotFoundPage.tsx","components/Loader/Loader.tsx","components/PersonLink.tsx","utils/searchHelper.ts","components/SearchLink.tsx","utils/Order.tsx","components/PeopleTable.tsx","components/PeopleFilters.tsx","types/SearchParams.ts","pages/PeoplePage.tsx","Root.tsx","index.tsx"],"names":["getLinkClass","isActive","classNames","Navbar","className","role","to","App","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","initState","people","isLoading","loadingError","filterPeople","PeopleContext","React","createContext","PeopleProvider","children","useState","setPeople","setIsLoading","setLoadingError","useEffect","getPeople","catch","finally","state","query","sex","centuries","sort","order","preparedPeople","preparedQuery","trim","toLowerCase","filter","person","name","fatherName","motherName","includes","length","personCentury","Math","ceil","born","toString","person1","person2","localeCompare","reverse","Provider","value","HomePage","NotFoundPage","Loader","PersonLink","slug","died","useSearchParams","searchParams","useContext","mother","find","per","father","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","Object","entries","forEach","key","delete","Array","isArray","part","append","set","SearchLink","params","props","search","OrderControl","currentSort","get","currentOrder","newSort","newOrder","handleOrder","cn","PeopleTable","useParams","map","PeopleFilters","setSearchParams","getAll","toggleCentury","century","cent","deleteCentury","type","placeholder","onChange","event","target","from","_","index","String","onClick","SearchParams","PeoplePage","QUERY","SEX","CENTURIES","SORT","ORDER","filteredPeople","useMemo","Root","path","element","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.7a8d95b5.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nfunction getLinkClass({ isActive }: { isActive: boolean }) {\n  return classNames('navbar-item', {\n    'has-background-grey-lighter': isActive,\n  });\n}\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink className={getLinkClass} to=\"/\">Home</NavLink>\n\n          <NavLink\n            aria-current=\"page\"\n            className={getLinkClass}\n            to=\"people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\n\nimport './App.scss';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React, { useState, useEffect } from 'react';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { Context } from '../types/Context';\nimport { Filter } from '../types/Filter';\n\nconst initState: Context = {\n  people: [] as Person[],\n  isLoading: false,\n  loadingError: false,\n  filterPeople: () => [],\n};\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const PeopleContext = React.createContext(initState);\n\nexport const PeopleProvider: React.FC<Props> = ({ children }) => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadingError, setLoadingError] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(setPeople)\n      .catch(() => setLoadingError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const filterPeople = ({\n    query = '',\n    sex = '',\n    centuries = [],\n    sort = '',\n    order = '',\n  }: Filter): Person[] => {\n    let preparedPeople = [...people];\n    const preparedQuery = query.trim().toLowerCase();\n\n    if (preparedQuery) {\n      preparedPeople = preparedPeople.filter(person => {\n        const { name, fatherName, motherName } = person;\n\n        return name.toLowerCase().includes(preparedQuery)\n          || motherName?.toLowerCase().includes(preparedQuery)\n          || fatherName?.toLowerCase().includes(preparedQuery);\n      });\n    }\n\n    if (sex) {\n      preparedPeople = preparedPeople.filter(person => person.sex === sex);\n    }\n\n    if (centuries.length > 0) {\n      preparedPeople = preparedPeople.filter(person => {\n        const personCentury = Math.ceil(person.born / 100);\n\n        return centuries.includes(personCentury.toString());\n      });\n    }\n\n    if (sort) {\n      preparedPeople.sort((person1, person2) => {\n        switch (sort) {\n          case 'name':\n          case 'sex':\n            return person1[sort].localeCompare(person2[sort]);\n\n          case 'born':\n          case 'died':\n            return person1[sort] - person2[sort];\n\n          default:\n            return 0;\n        }\n      });\n    }\n\n    if (order === 'desc') {\n      preparedPeople.reverse();\n    }\n\n    return preparedPeople;\n  };\n\n  const state = {\n    people,\n    isLoading,\n    loadingError,\n    filterPeople,\n  };\n\n  return (\n    <PeopleContext.Provider value={state}>\n      {children}\n    </PeopleContext.Provider>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useContext } from 'react';\nimport classNames from 'classnames';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { PeopleContext } from '../stores/PeopleContext';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const {\n    slug,\n    motherName,\n    fatherName,\n    name,\n    sex,\n    born,\n    died,\n  } = person;\n  const [searchParams] = useSearchParams();\n\n  const { people } = useContext(PeopleContext);\n  const mother = people.find((per) => per.name === motherName);\n  const father = people.find((per) => per.name === fatherName);\n\n  return (\n    <>\n      <td>\n        <Link\n          className={classNames({ 'has-text-danger': sex === 'f' })}\n          to={`/people/${slug}?${searchParams.toString()}`}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n\n      <td>\n        {mother ? (\n          <Link\n            to={`/people/${mother?.slug}?${searchParams.toString()}`}\n            className={classNames({ 'has-text-danger': mother?.sex === 'f' })}\n          >\n            {mother?.name}\n          </Link>\n        ) : (\n          motherName || '-'\n        )}\n      </td>\n\n      <td>\n        {father ? (\n          <Link\n            to={`/people/${father?.slug}?${searchParams.toString()}`}\n            className={classNames({ 'has-text-danger': father?.sex === 'f' })}\n          >\n            {father?.name}\n          </Link>\n        ) : (\n          fatherName || '-'\n        )}\n      </td>\n    </>\n  );\n};\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\n/**\n * To replace the the standard `Link` we take all it props except for `to`\n * along with the custom `params` prop that we use for updating the search\n */\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\n/**\n * SearchLink updates the given `params` in the search keeping the `pathname`\n * and the other existing search params (see `getSearchWith`)\n */\nexport const SearchLink: React.FC<Props> = ({\n  children, // this is the content between the open and closing tags\n  params, // the params to be updated in the `search`\n  ...props // all usual Link props like `className`, `style` and `id`\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      // to={{ search: getSearchWith(searchParams, { query: 'sdf' }) }}\n      // to={{ search: getSearchWith(searchParams, { query: null }) }}\n      // to={{ search: getSearchWith(searchParams, { centuries: ['16', '18'] }) }}\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props} // copy all the other props\n    >\n      {children}\n    </Link>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { SearchLink } from '../components/SearchLink';\n\ntype OrderControlProps = {\n  sort: string;\n};\n\nexport const OrderControl = ({ sort }: OrderControlProps) => {\n  const [searchParams] = useSearchParams();\n\n  const handleOrder = () => {\n    const currentSort = searchParams.get('sort');\n    const currentOrder = searchParams.get('order');\n\n    let newSort: string | null = null;\n    let newOrder: string | null = null;\n\n    if (!currentSort) {\n      newSort = sort;\n    }\n\n    if (currentSort === sort && !currentOrder) {\n      newSort = sort;\n      newOrder = 'desc';\n    }\n\n    return { sort: newSort, order: newOrder };\n  };\n\n  return (\n    <SearchLink params={handleOrder()}>\n      <span className=\"icon\">\n        <i className={cn('fas fa-sort', {\n          'fa-sort-up': searchParams.get('sort') === sort\n            && !searchParams.get('order'),\n          'fa-sort-down': searchParams.get('sort') === sort\n            && !!searchParams.get('order'),\n        })}\n        />\n      </span>\n    </SearchLink>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\nimport { OrderControl } from '../utils/Order';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Name\n              <OrderControl sort=\"name\" />\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Sex\n              <OrderControl sort=\"sex\" />\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Born\n              <OrderControl sort=\"born\" />\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Died\n              <OrderControl sort=\"died\" />\n            </span>\n          </th>\n\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map((person) => (\n          <tr\n            data-cy=\"person\"\n            key={person.slug}\n            className={classNames({\n              'has-background-warning': person.slug === slug,\n            })}\n          >\n            <PersonLink\n              key={person.slug}\n              person={person}\n            />\n          </tr>\n        ))}\n      </tbody>\n\n    </table>\n  );\n};\n","import React from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { SearchLink } from './SearchLink';\nimport { getSearchWith } from '../utils/searchHelper';\n\nexport const PeopleFilters: React.FC = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const centuries = searchParams.getAll('centuries') || [];\n\n  function toggleCentury(century: string) {\n    return centuries.includes(century)\n      ? centuries.filter(cent => cent !== century)\n      : [...centuries, century];\n  }\n\n  function deleteCentury() {\n    const params = new URLSearchParams(searchParams);\n\n    params.delete('centuries');\n    setSearchParams(params);\n  }\n\n  const renderCenturyLink = (century: string) => (\n    <SearchLink\n      key={century}\n      data-cy=\"century\"\n      className={classNames(\n        'button mr-1', { 'is-info': centuries.includes(century) },\n      )}\n      params={{ centuries: toggleCentury(century) }}\n    >\n      {century}\n    </SearchLink>\n  );\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <SearchLink\n          className={classNames({ 'is-active': !searchParams.get('sex') })}\n          params={{ sex: null }}\n        >\n          All\n        </SearchLink>\n        <SearchLink\n          className={classNames(\n            { 'is-active': searchParams.get('sex') === 'm' },\n          )}\n          params={{ sex: 'm' }}\n        >\n          Male\n        </SearchLink>\n        <SearchLink\n          className={classNames(\n            { 'is-active': searchParams.get('sex') === 'f' },\n          )}\n          params={{ sex: 'f' }}\n        >\n          Female\n        </SearchLink>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            onChange={(event) => {\n              const params = getSearchWith(\n                searchParams, { query: event.target.value || null },\n              );\n\n              setSearchParams(params);\n            }}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {Array.from(\n              { length: 5 },\n              (_, index) => renderCenturyLink(String(index + 16)),\n            )}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <SearchLink\n              data-cy=\"centuryALL\"\n              className={classNames(\n                'button mr-1',\n                { 'is-success': !searchParams.get('centuries') },\n              )}\n              params={{ centuries: [] }}\n              onClick={() => deleteCentury}\n            >\n              All\n            </SearchLink>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <SearchLink\n          className=\"button is-link is-outlined is-fullwidth\"\n          params={{\n            sex: null,\n            query: null,\n            centuries: null,\n          }}\n        >\n          Reset all filters\n        </SearchLink>\n      </div>\n    </nav>\n  );\n};\n","export enum SearchParams {\n  QUERY = 'query',\n  SEX = 'sex',\n  CENTURIES = 'centuries',\n  SORT = 'sort',\n  ORDER = 'order',\n}\n","import { useContext, useMemo } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { PeopleContext } from '../stores/PeopleContext';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { PeopleFilters } from '../components/PeopleFilters';\nimport { SearchParams } from '../types/SearchParams';\n\nexport const PeoplePage = () => {\n  const {\n    people,\n    isLoading,\n    loadingError,\n    filterPeople,\n  } = useContext(PeopleContext);\n\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get(SearchParams.QUERY) || '';\n  const sex = searchParams.get(SearchParams.SEX) || '';\n  const centuries = searchParams.getAll(SearchParams.CENTURIES) || [];\n  const sort = searchParams.get(SearchParams.SORT) || '';\n  const order = searchParams.get(SearchParams.ORDER) || '';\n\n  const filteredPeople = useMemo(() => {\n    return filterPeople({\n      query, sex, centuries, sort, order,\n    });\n  }, [people, query, centuries, sex, sort, order]);\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            {people.length > 0 && (\n              <PeopleFilters />\n            )}\n          </div>\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {isLoading && (\n                <Loader />\n              )}\n\n              {loadingError && (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  Something went wrong\n                </p>\n              )}\n\n              {(!isLoading && !loadingError && !people.length) && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n\n              {(!filteredPeople.length && !isLoading) && (\n                <p>There are no people matching the current search criteria</p>\n              )}\n\n              {filteredPeople.length > 0 && (\n                <PeopleTable people={filteredPeople} />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import {\n  HashRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { PeopleProvider } from './stores/PeopleContext';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { PeoplePage } from './pages/PeoplePage';\n\nexport const Root = () => (\n  <Router>\n    <PeopleProvider>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n\n          <Route path=\"people\" element={<PeoplePage />}>\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </PeopleProvider>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(<Root />);\n"],"sourceRoot":""}